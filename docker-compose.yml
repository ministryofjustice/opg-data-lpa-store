services:
  lambda-create:
    image: lpa-store/lambda/api-create
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./lambda/Dockerfile
      args:
        - DIR=create
    environment:
      AWS_REGION: eu-west-1
      AWS_BASE_URL: http://localstack:4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      DDB_TABLE_NAME_DEEDS: deeds
      DDB_TABLE_NAME_CHANGES: changes
      S3_BUCKET_NAME_ORIGINAL: opg-lpa-store-static-eu-west-1
      EVENT_BUS_NAME: local-main
      JWT_SECRET_KEY_ARN: local/jwt-key
    volumes:
      - "./lambda/.aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  lambda-update:
    image: lpa-store/lambda/api-update
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./lambda/Dockerfile
      args:
        - DIR=update
    environment:
      AWS_REGION: eu-west-1
      AWS_BASE_URL: http://localstack:4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      DDB_TABLE_NAME_DEEDS: deeds
      DDB_TABLE_NAME_CHANGES: changes
      EVENT_BUS_NAME: local-main
      JWT_SECRET_KEY_ARN: local/jwt-key
    volumes:
      - "./lambda/.aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  lambda-get:
    image: lpa-store/lambda/api-get
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./lambda/Dockerfile
      args:
        - DIR=get
    environment:
      AWS_REGION: eu-west-1
      AWS_BASE_URL: http://localstack:4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      DDB_TABLE_NAME_DEEDS: deeds
      DDB_TABLE_NAME_CHANGES: changes
      EVENT_BUS_NAME: local-main
      JWT_SECRET_KEY_ARN: local/jwt-key
    volumes:
      - "./lambda/.aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  lambda-getlist:
    image: lpa-store/lambda/api-getlist
    depends_on:
      localstack:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./lambda/Dockerfile
      args:
        - DIR=getlist
    environment:
      AWS_REGION: eu-west-1
      AWS_BASE_URL: http://localstack:4566
      AWS_ACCESS_KEY_ID: localstack
      AWS_SECRET_ACCESS_KEY: localstack
      DDB_TABLE_NAME_DEEDS: deeds
      DDB_TABLE_NAME_CHANGES: changes
      EVENT_BUS_NAME: local-main
      JWT_SECRET_KEY_ARN: local/jwt-key
    volumes:
      - "./lambda/.aws-lambda-rie:/aws-lambda"
    entrypoint: /aws-lambda/aws-lambda-rie /var/task/main

  apigw:
    depends_on: [lambda-create, lambda-update, lambda-get, lambda-getlist]
    build:
      context: .
      dockerfile: ./mock-apigw/Dockerfile
    ports:
      - 9000:8080

  localstack:
    image: localstack/localstack:4.2
    ports:
      - "4566:4566"
    volumes:
      - "./localstack/init:/etc/localstack/init/ready.d"
      - "./localstack/wait:/scripts/wait"
    environment:
      AWS_DEFAULT_REGION: eu-west-1
    healthcheck:
      test: bash /scripts/wait/healthcheck.sh
      interval: 10s
      timeout: 10s
      retries: 50

  go-lint:
    image: golangci/golangci-lint:v2.0.0
    working_dir: /go/src/app
    volumes:
      - ./:/go/src/app
    command: golangci-lint run --timeout 5m --enable gosec --output.text.path stdout --output.sarif.path test-results/golangci-lint.sarif ./lambda/get/... ./lambda/create/... ./lambda/update/...

  pact-verifier:
    image: pactfoundation/pact-ref-verifier
    entrypoint:
      - pact_verifier_cli
      - --hostname=apigw
      - --port=8080
      - --base-path=/
      - --broker-url=https://pact-broker.api.opg.service.justice.gov.uk/
      - --provider-name=data-lpa-store
      - --state-change-url=http://apigw:8080/_pact_state

  fixtures:
    image: lpa-store/fixtures
    build:
      context: .
      dockerfile: ./fixtures/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - SKIP_AUTH=1
      - BASE_URL=http://apigw:8080
      - JWT_SECRET_KEY=mysupersecrettestkeythatis128bits
    volumes:
      - ./fixtures/static/js:/app/static/js
      - ./docs/schemas:/app/static/schemas
