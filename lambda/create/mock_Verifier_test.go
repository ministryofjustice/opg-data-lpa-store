// Code generated by mockery. DO NOT EDIT.

package main

import (
	events "github.com/aws/aws-lambda-go/events"
	mock "github.com/stretchr/testify/mock"

	shared "github.com/ministryofjustice/opg-data-lpa-store/internal/shared"
)

// mockVerifier is an autogenerated mock type for the Verifier type
type mockVerifier struct {
	mock.Mock
}

type mockVerifier_Expecter struct {
	mock *mock.Mock
}

func (_m *mockVerifier) EXPECT() *mockVerifier_Expecter {
	return &mockVerifier_Expecter{mock: &_m.Mock}
}

// VerifyHeader provides a mock function with given fields: _a0
func (_m *mockVerifier) VerifyHeader(_a0 events.APIGatewayProxyRequest) (*shared.LpaStoreClaims, error) {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for VerifyHeader")
	}

	var r0 *shared.LpaStoreClaims
	var r1 error
	if rf, ok := ret.Get(0).(func(events.APIGatewayProxyRequest) (*shared.LpaStoreClaims, error)); ok {
		return rf(_a0)
	}
	if rf, ok := ret.Get(0).(func(events.APIGatewayProxyRequest) *shared.LpaStoreClaims); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*shared.LpaStoreClaims)
		}
	}

	if rf, ok := ret.Get(1).(func(events.APIGatewayProxyRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mockVerifier_VerifyHeader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VerifyHeader'
type mockVerifier_VerifyHeader_Call struct {
	*mock.Call
}

// VerifyHeader is a helper method to define mock.On call
//   - _a0 events.APIGatewayProxyRequest
func (_e *mockVerifier_Expecter) VerifyHeader(_a0 interface{}) *mockVerifier_VerifyHeader_Call {
	return &mockVerifier_VerifyHeader_Call{Call: _e.mock.On("VerifyHeader", _a0)}
}

func (_c *mockVerifier_VerifyHeader_Call) Run(run func(_a0 events.APIGatewayProxyRequest)) *mockVerifier_VerifyHeader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(events.APIGatewayProxyRequest))
	})
	return _c
}

func (_c *mockVerifier_VerifyHeader_Call) Return(_a0 *shared.LpaStoreClaims, _a1 error) *mockVerifier_VerifyHeader_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *mockVerifier_VerifyHeader_Call) RunAndReturn(run func(events.APIGatewayProxyRequest) (*shared.LpaStoreClaims, error)) *mockVerifier_VerifyHeader_Call {
	_c.Call.Return(run)
	return _c
}

// newMockVerifier creates a new instance of mockVerifier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockVerifier(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockVerifier {
	mock := &mockVerifier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
